import { collection, getDocs, doc, getDoc, setDoc } from "firebase/firestore";
import { db } from "../../../firebase";

export async function GET() {
  try {
    // Get today's date in PST (UTC-8)
    const today = new Date();
    const pstOffset = -8 * 60; // PST is UTC-8
    const pstDate = new Date(today.getTime() + (pstOffset * 60 * 1000));
    const todaysDate = pstDate.toLocaleDateString('en-CA'); // Format as YYYY-MM-DD

    console.log(`Checking for daily wordset for date: ${todaysDate}`);

    // Check if a word set for today exists in the 'dailyWordsets' collection
    const dailyWordsetDoc = doc(db, "dailyWordsets", todaysDate);
    const dailyWordsetSnapshot = await getDoc(dailyWordsetDoc);

    let wordset;

    if (dailyWordsetSnapshot.exists()) {
      // Word set for today exists, return it
      wordset = dailyWordsetSnapshot.data().words;
      console.log(`Found existing daily wordset for ${todaysDate}`);
    } else {
      // No word set for today exists
      console.log(`No daily wordset found for ${todaysDate}. This should be generated by the cron job.`);
      
      // Try to get a fallback from the legacy 'words' collection
      const wordsCollection = collection(db, "words");
      const snapshot = await getDocs(wordsCollection);

      if (snapshot.empty) {
        console.log("No fallback word lists found in the collection.");
        return new Response(JSON.stringify({ 
          message: "No words available for today. Please check if the daily word generation is working properly." 
        }), { status: 404 });
      }

      const wordLists = [];
      snapshot.forEach((docSnapshot) => {
        wordLists.push(docSnapshot.data().words);
      });

      // Select a random word set as fallback and save it for today
      wordset = wordLists[Math.floor(Math.random() * wordLists.length)];
      await setDoc(dailyWordsetDoc, { 
        words: wordset,
        date: todaysDate,
        isFallback: true,
        generatedAt: new Date().toISOString()
      });
      
      console.log(`Using fallback wordset for ${todaysDate}`);
    }

    console.log(`Returning daily word set for ${todaysDate}:`, wordset);
    return new Response(JSON.stringify({ clues: wordset }), { status: 200 });
  } catch (error) {
    console.error("Error in start-game:", error);
    return new Response(JSON.stringify({ message: "Internal server error" }), { status: 500 });
  }
}
